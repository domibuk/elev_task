- name: Prepare ansible_environment
  become: true
  become_user: root
  hosts: all
  vars_files:
    - vars/ansible_environment.yml
  tasks:
    - name: update packages
      command: apt-get update

    ### Nginx configuration

    - name: install basic unix-level services
      apt: name={{ item }} state=latest
      with_items:
        - nginx
        - python3
        - python3-pip

    - name: start nginx
      service:
        name: nginx
        state: started

    ### Gragana configuration

    - name: install gpg
      apt:
        name: gnupg,software-properties-common
        state: present
        update_cache: yes
        cache_valid_time: 3600

    - name: add gpg hey
      apt_key:
        url: "https://packages.grafana.com/gpg.key"
        validate_certs: no

    - name: add repository
      apt_repository:
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        state: present
        validate_certs: no

    - name: install grafana
      apt:
        name: grafana
        state: latest
        update_cache: yes
        cache_valid_time: 3600
    - name: start service grafana-server
      systemd:
        name: grafana-server
        state: started
        enabled: yes

    - name: wait for service up
      uri:
        url: "http://127.0.0.1:3000"
        status_code: 200
      register: __result
      until: __result.status == 200
      retries: 120
      delay: 1

    - name: change admin password for grafana gui
      shell: "grafana-cli admin reset-admin-password admin123"
      register: __command_admin
      changed_when: __command_admin.rc !=0

    ### Prometeus configuration

    - name: update and install prometheus
      apt:
        name: prometheus
        state: latest
        update_cache: yes
        cache_valid_time: 3600

    - name: prometheus args
      template:
        src: prometheus.j2
        dest: /etc/default/prometheus
        mode: 0644
        owner: root
        group: root
      notify: restart_prometheus

    - name: prometheus configuration file
      template:
        src: prometheus.yml.j2
        dest: "{{ prometheus_dir_configuration }}/prometheus.yml"
        mode: 0755
        owner: prometheus
        group: prometheus
      notify: reload_prometheus

    - name: start prometheus
      systemd:
        name: prometheus
        state: started
        enabled: yes

  handlers:
    - name: restart_prometheus
      systemd:
        name: prometheus
        state: restarted
        enabled: yes
        daemon_reload: yes

    - name: reload_prometheus
      uri:
        url: http://localhost:9090/-/reload
        method: POST
        status_code: 200
